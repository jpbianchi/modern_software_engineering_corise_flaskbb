# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: test

on:
  push:
    branches: [ main ] 
    paths-ignore:
      - 'docs/**'
      - 'flaskbb/themes/**'
      - '**.md'
      - '**.rst'
      - '**/CHANGES'
      - '**/AUTHORS'
      - '**/LICENSE'

  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
  # unlike when we push a change, we do not 'pull request' a change, that's not what it means
  # this option runs the workflow when ACTIVITY on a pull request in the workflow's repository occurs
  # so if there is a pull request from this branch to main, every push to it will trigger the workflow
  # UNLESS the pull request has a merge conflict. The merge conflict must be resolved first.
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'flaskbb/themes/**'
      - '**.md'
      - '**.rst'
      - '**/CHANGES'
      - '**/AUTHORS'
      - '**/LICENSE'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Get pip cache dir
      id: pip-cache
      run: echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: pip|${{ runner.os }}|${{ matrix.python-version }}|${{ hashFiles('requirements*.txt') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements-dev.txt
        pip install -e .
        pip install playwright --upgrade
        playwright install
        playwright install-deps

    - name: Prepare FlaskBB
      run: |
        flaskbb translations compile
    
    # CoRise TODO: add another job to the workflow that will run flake8 
    # and r eport any errors that were introduced in the proposed change
    - name: Flake8 tests 
      run: flake8 --select=E9,F63,F7,F82 --exit-zero --statistics flaskbb/
    
    - name: Pytests
      # beware there's a [coverage:html] section in setup.cfg that defines a folder
      run: pytest --cov=./  --cov-report=html:tests/htmlcov2  # Run pytest with coverage report

    # https://github.com/actions/upload-artifact#where-does-the-upload-go
    # For more detailed logs during the artifact upload process, enable step-debugging:
    # https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging
    - name: Upload coverage
      # https://github.com/actions/upload-artifact
      uses: actions/upload-artifact@v3
      with:
        name: code coverage report
        path: tests/htmlcov2

